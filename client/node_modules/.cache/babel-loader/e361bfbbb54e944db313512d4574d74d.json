{"ast":null,"code":"var _jsxFileName = \"/Users/mikenezzer/Desktop/vinyl_vault/Vinyl-Vault/client/src/screens/SignUp/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport './SignUp.css';\nimport { useState } from 'react';\nimport { registerUser } from '../../services/auth';\nimport { useHistory } from 'react-router-dom';\nimport Layout from '../../components/Layout/Layout.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    setUser,\n    user,\n    handleLogout,\n    handleRegister\n  } = _ref;\n  const history = useHistory();\n  const [form, setForm] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    isError: false,\n    errorMsg: ''\n  });\n\n  const handleChange = event => setForm(prev => ({ ...prev,\n    [event.target.name]: event.target.value\n  }));\n\n  const onSignUp = async event => {\n    event.preventDefault();\n\n    try {\n      if (password === passwordConfirmation) {\n        const user = await register(form);\n        setUser(user);\n        history.push('/albums');\n      } else {\n        throw new Error(\"Passwords do not match\");\n      }\n    } catch (error) {\n      console.error(error);\n      setForm({\n        username: '',\n        email: '',\n        password: '',\n        passwordConfirmation: '',\n        isError: true,\n        errorMsg: 'Sign Up Details Invalid'\n      });\n    }\n  };\n\n  const renderError = () => {\n    const toggleForm = form.isError ? 'danger' : '';\n\n    if (form.isError) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: toggleForm,\n        children: form.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const {\n    username,\n    email,\n    password,\n    passwordConfirmation\n  } = form;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSignUp,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          placeholder: \"Enter username\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          placeholder: \"Enter email\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          name: \"password\",\n          value: password,\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password Confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          name: \"passwordConfirmation\",\n          value: passwordConfirmation,\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), renderError()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"ovmOe5JTB/KFwKCu/Iig4z5rwXw=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/mikenezzer/Desktop/vinyl_vault/Vinyl-Vault/client/src/screens/SignUp/SignUp.jsx"],"names":["useState","registerUser","useHistory","Layout","SignUp","setUser","user","handleLogout","handleRegister","history","form","setForm","username","email","password","passwordConfirmation","isError","errorMsg","handleChange","event","prev","target","name","value","onSignUp","preventDefault","register","push","Error","error","console","renderError","toggleForm"],"mappings":"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","sourcesContent":["import './SignUp.css'\nimport { useState } from 'react'\nimport { registerUser} from '../../services/auth'\nimport { useHistory } from 'react-router-dom'\nimport Layout  from '../../components/Layout/Layout.jsx'\n\nconst SignUp = ({setUser, user, handleLogout, handleRegister}) => {\n  const history = useHistory()\n\n  const [form, setForm] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    isError: false,\n    errorMsg: '',\n  })\n\n  const handleChange = (event) =>\n    setForm(prev => ({\n      ...prev,\n      [event.target.name]: event.target.value,\n    }))\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    \n\n    try {\n      if (password === passwordConfirmation) {\n        const user = await register(form)\n        setUser(user)\n        history.push('/albums')\n      } else { \n        throw new Error(\"Passwords do not match\")\n      }\n    } catch (error) {\n      console.error(error)\n      setForm({\n        username: '',\n        email: '',\n        password: '',\n        passwordConfirmation: '',\n        isError: true,\n        errorMsg: 'Sign Up Details Invalid',\n      })\n    }\n  }\n\n  const renderError = () => {\n    const toggleForm = form.isError ? 'danger' : ''\n    if (form.isError) {\n      return (\n        <button type='submit' className={toggleForm}>\n          {form.errorMsg}\n        </button>\n      )\n    } else {\n      return <button type='submit'>Sign Up</button>\n    }\n  }\n\n  const { username, email, password, passwordConfirmation } = form\n\n  return (\n    <Layout>\n    <div className='form-container'>\n      <h3>Sign Up</h3>\n      <form onSubmit={onSignUp}>\n        <label>Username</label>\n        <input\n          required\n          type='text'\n          name='username'\n          value={username}\n          placeholder='Enter username'\n          onChange={handleChange}\n        />\n        <label>Email address</label>\n        <input\n          required\n          type='email'\n          name='email'\n          value={email}\n          placeholder='Enter email'\n          onChange={handleChange}\n        />\n        <label>Password</label>\n        <input\n          required\n          name='password'\n          value={password}\n          type='password'\n          placeholder='Password'\n          onChange={handleChange}\n        />\n        <label>Password Confirmation</label>\n        <input\n          required\n          name='passwordConfirmation'\n          value={passwordConfirmation}\n          type='password'\n          placeholder='Confirm Password'\n          onChange={handleChange}\n        />\n        {renderError()}\n      </form>\n      </div>\n      </Layout>\n  )\n}\n\nexport default SignUp"]},"metadata":{},"sourceType":"module"}