{"ast":null,"code":"var _jsxFileName = \"/Users/mikenezzer/Desktop/vinyl_vault/Vinyl-Vault/client/src/screens/SignIn/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './SignIn.css';\nimport { loginUser } from '../../services/auth';\nimport { useHistory } from 'react-router-dom';\nimport Layout from \"../../components/Layout/Layout.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = props => {\n  _s();\n\n  const history = useHistory();\n  const [form, setForm] = useState({\n    username: '',\n    password: '',\n    isError: false,\n    errorMsg: ''\n  });\n\n  const handleChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSignIn = async event => {\n    event.preventDefault();\n    const {\n      setUser\n    } = props;\n\n    try {\n      const user = await loginUser(form);\n      setUser(user);\n      history.push('/');\n    } catch (error) {\n      console.error(error);\n      setForm({\n        isError: true,\n        errorMsg: 'Invalid Credentials',\n        email: '',\n        password: ''\n      });\n    }\n  };\n\n  const renderError = () => {\n    const toggleForm = form.isError ? 'danger' : '';\n\n    if (form.isError) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: toggleForm,\n        children: form.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const {\n    email,\n    password\n  } = form;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSignIn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"email\",\n          value: email,\n          placeholder: \"Enter Email\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          name: \"password\",\n          value: password,\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), renderError()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"IN+dwdjc9Y4LTSYHlXk37JAtJVU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/mikenezzer/Desktop/vinyl_vault/Vinyl-Vault/client/src/screens/SignIn/SignIn.jsx"],"names":["useState","loginUser","useHistory","Layout","SignIn","props","history","form","setForm","username","password","isError","errorMsg","handleChange","event","target","name","value","onSignIn","preventDefault","setUser","user","push","error","console","email","renderError","toggleForm"],"mappings":"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","sourcesContent":["\nimport { useState } from 'react'\nimport './SignIn.css'\nimport { loginUser } from '../../services/auth'\nimport { useHistory } from 'react-router-dom'\nimport Layout from \"../../components/Layout/Layout.jsx\";\n\nconst SignIn = (props) => {\n  const history = useHistory()\n\n  const [form, setForm] = useState({\n    username: '',\n    password: '',\n    isError: false,\n    errorMsg: '',\n  })\n\n  const handleChange = (event) => {\n    setForm({\n      ...form,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n    const { setUser } = props\n    try {\n      const user = await loginUser(form)\n      setUser(user)\n      history.push('/')\n    } catch (error) {\n      console.error(error)\n      setForm({\n        isError: true,\n        errorMsg: 'Invalid Credentials',\n        email: '',\n        password: '',\n      })\n    }\n  }\n\n  const renderError = () => {\n    const toggleForm = form.isError ? 'danger' : ''\n    if (form.isError) {\n      return (\n        <button type='submit' className={toggleForm}>\n          {form.errorMsg}\n        </button>\n      )\n    } else {\n      return <button type='submit'>Sign In</button>\n    }\n  }\n\n  const { email, password } = form\n\n  return (\n    <Layout>\n    <div className='form-container'>\n      <h3>Sign In</h3>\n      <form onSubmit={onSignIn}>\n        <label>Email</label>\n        <input\n          required\n          type='text'\n          name='email'\n          value={email}\n          placeholder='Enter Email'\n          onChange={handleChange}\n        />\n        <label>Password</label>\n        <input\n          required\n          name='password'\n          value={password}\n          type='password'\n          placeholder='Password'\n          onChange={handleChange}\n        />\n        {renderError()}\n      </form>\n      </div>\n      </Layout>\n  )\n}\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}